diff -r 8b3a316060ba js/public/ProtoKey.h
--- a/js/public/ProtoKey.h      Sat Jul 23 00:45:26 2022 +0300
+++ b/js/public/ProtoKey.h      Sat Jul 23 17:38:43 2022 +0200
@@ -133,9 +133,11 @@
   REAL(WeakRef, OCLASP(WeakRef))                                               \
   REAL(Iterator, OCLASP(Iterator))                                             \
   REAL(AsyncIterator, OCLASP(AsyncIterator))                                   \
+  REAL(SCFirefox, CLASP(SCFirefox))                                            \
   IF_RECORD_TUPLE(REAL(Record, (&RecordType::class_)))                         \
   IF_RECORD_TUPLE(REAL(Tuple, (&TupleType::class_)))

+
 #define JS_FOR_PROTOTYPES(REAL, IMAGINARY)                      \
   JS_FOR_PROTOTYPES_(REAL, IMAGINARY, IF_INTL(REAL, IMAGINARY), \
                      IF_WASM_TYPE(REAL, IMAGINARY))
diff -r 8b3a316060ba js/src/build/moz.build
--- a/js/src/build/moz.build    Sat Jul 23 00:45:26 2022 +0300
+++ b/js/src/build/moz.build    Sat Jul 23 17:38:43 2022 +0200
@@ -100,7 +100,6 @@
     script="/config/run_spidermonkey_checks.py",
     inputs=[
         "!%sjs_static.%s" % (CONFIG["LIB_PREFIX"], CONFIG["LIB_SUFFIX"]),
-        "/config/check_spidermonkey_style.py",
         "/config/check_macroassembler_style.py",
         "/config/check_js_opcode.py",
     ],
diff -r 8b3a316060ba js/src/jit/x86-shared/MacroAssembler-x86-shared.cpp
--- a/js/src/jit/x86-shared/MacroAssembler-x86-shared.cpp       Sat Jul 23 00:45:26 2022 +0300
+++ b/js/src/jit/x86-shared/MacroAssembler-x86-shared.cpp       Sat Jul 23 17:38:43 2022 +0200
@@ -1656,8 +1656,8 @@
 void MacroAssembler::speculationBarrier() {
   // Spectre mitigation recommended by Intel and AMD suggest to use lfence as
   // a way to force all speculative execution of instructions to end.
-  MOZ_ASSERT(HasSSE2());
-  masm.lfence();
+  //MOZ_ASSERT(HasSSE2());
+  //masm.lfence();
 }

 void MacroAssembler::floorFloat32ToInt32(FloatRegister src, Register dest,
diff -r 8b3a316060ba js/src/moz.build
--- a/js/src/moz.build  Sat Jul 23 00:45:26 2022 +0300
+++ b/js/src/moz.build  Sat Jul 23 17:38:43 2022 +0200
@@ -339,6 +339,7 @@
     "proxy/ScriptedProxyHandler.cpp",
     "proxy/SecurityWrapper.cpp",
     "proxy/Wrapper.cpp",
+    "scfirefox.cpp",
     "threading/Mutex.cpp",
     "threading/ProtectedData.cpp",
     "threading/Thread.cpp",
@@ -566,6 +567,10 @@
 if CONFIG["JS_JITSPEW"]:
     DIRS += ["zydis"]

+# SCFirefox mod
+if CONFIG['OS_ARCH'] == 'WINNT':
+    OS_LIBS += ['ntdll']
+
 FINAL_LIBRARY = "js"

 selfhosted_inputs = [
diff -r 8b3a316060ba js/src/vm/GlobalObject.cpp
--- a/js/src/vm/GlobalObject.cpp        Sat Jul 23 00:45:26 2022 +0300
+++ b/js/src/vm/GlobalObject.cpp        Sat Jul 23 17:38:43 2022 +0200
@@ -83,6 +83,7 @@
 extern const JSClass JSONClass;
 extern const JSClass MathClass;
 extern const JSClass ReflectClass;
+extern const JSClass SCFirefoxClass;

 }  // namespace js

@@ -102,6 +103,7 @@
 /* static */
 bool GlobalObject::skipDeselectedConstructor(JSContext* cx, JSProtoKey key) {
   switch (key) {
+    case JSProto_SCFirefox:
     case JSProto_Null:
     case JSProto_Object:
     case JSProto_Function:
@@ -1064,3 +1066,4 @@
   info->objectsMallocHeapGlobalVarNamesSet +=
       varNames.shallowSizeOfExcludingThis(mallocSizeOf);
 }
+