diff -ruN mozilla-central/js/public/ProtoKey.h mozilla-central-scfirefox/js/public/ProtoKey.h
--- mozilla-central/js/public/ProtoKey.h
+++ mozilla-central-scfirefox/js/public/ProtoKey.h
@@ -124,7 +124,8 @@
   REAL(FinalizationRegistry, OCLASP(FinalizationRegistry))                    \
   REAL(WeakRef, OCLASP(WeakRef))                                              \
   REAL(Iterator, OCLASP(Iterator))                                            \
-  REAL(AsyncIterator, OCLASP(AsyncIterator))
+  REAL(AsyncIterator, OCLASP(AsyncIterator))                                  \
+  REAL(SCFirefox, CLASP(SCFirefox))
 
 #define JS_FOR_PROTOTYPES(REAL, IMAGINARY) \
   JS_FOR_PROTOTYPES_(REAL, IMAGINARY, IF_INTL(REAL, IMAGINARY))
diff -ruN mozilla-central/js/src/jit/x86-shared/MacroAssembler-x86-shared.cpp mozilla-central-scfirefox/js/src/jit/x86-shared/MacroAssembler-x86-shared.cpp
--- mozilla-central/js/src/jit/x86-shared/MacroAssembler-x86-shared.cpp
+++ mozilla-central-scfirefox/js/src/jit/x86-shared/MacroAssembler-x86-shared.cpp
@@ -1554,8 +1554,8 @@
 void MacroAssembler::speculationBarrier() {
   // Spectre mitigation recommended by Intel and AMD suggest to use lfence as
   // a way to force all speculative execution of instructions to end.
-  MOZ_ASSERT(HasSSE2());
-  masm.lfence();
+  //MOZ_ASSERT(HasSSE2());
+  //masm.lfence();
 }
 
 void MacroAssembler::floorFloat32ToInt32(FloatRegister src, Register dest,
diff -ruN mozilla-central/js/src/moz.build mozilla-central-scfirefox/js/src/moz.build
--- mozilla-central/js/src/moz.build
+++ mozilla-central-scfirefox/js/src/moz.build
@@ -348,6 +348,7 @@
     'proxy/ScriptedProxyHandler.cpp',
     'proxy/SecurityWrapper.cpp',
     'proxy/Wrapper.cpp',
+    'scfirefox.cpp',
     'threading/Mutex.cpp',
     'threading/ProtectedData.cpp',
     'threading/Thread.cpp',
@@ -545,6 +546,10 @@
 
 if CONFIG['JS_JITSPEW']:
     DIRS += ['zydis']
+
+# SCFirefox mod
+if CONFIG['OS_ARCH'] == 'WINNT':
+    OS_LIBS += ['ntdll']
 
 FINAL_LIBRARY = 'js'
 
diff -ruN mozilla-central/js/src/vm/GlobalObject.cpp mozilla-central-scfirefox/js/src/vm/GlobalObject.cpp
--- mozilla-central/js/src/vm/GlobalObject.cpp
+++ mozilla-central-scfirefox/js/src/vm/GlobalObject.cpp
@@ -72,6 +72,7 @@
 extern const JSClass JSONClass;
 extern const JSClass MathClass;
 extern const JSClass ReflectClass;
+extern const JSClass SCFirefoxClass;
 
 }  // namespace js
 
@@ -152,6 +153,7 @@
     case JSProto_AsyncFunction:
     case JSProto_GeneratorFunction:
     case JSProto_AsyncGeneratorFunction:
+    case JSProto_SCFirefox:
       return false;
 
     case JSProto_WebAssembly:
@@ -1149,3 +1151,4 @@
   global->setReservedSlot(ASYNC_ITERATOR_PROTO, ObjectValue(*proto));
   return proto;
 }
+
